services:
  gateway:
    image: traefik:v3.0
    restart: unless-stopped
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_EMAIL=${EMAIL}
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt-data:/letsencrypt
      - ./traefik.yml:/etc/traefik/traefik.yaml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${DASHBOARD_DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${DASHBOARD_AUTH}"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
  app:
    build: .
    restart: unless-stopped
    expose:
      - 8080
    environment:
        SENDGRID_API_KEY: ${SENDGRID_API_KEY}
        ACCOUNT_SID: ${ACCOUNT_SID}
        AUTH_TOKEN: ${AUTH_TOKEN}
        SENDER_PHONE: ${SENDER_PHONE}
        SENDER_EMAIL: ${SENDER_EMAIL}
        POSTGRES_URI: ${POSTGRES_URI}
        PAPERTRAIL_HOST: ${PAPERTRAIL_HOST}
        PAPERTRAIL_PORT: ${PAPERTRAIL_PORT}
        PRIVATE_KEY: ${PRIVATE_KEY}
        PUBLIC_KEY: ${PUBLIC_KEY}
        ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.app.entrypoints=https"
      -  "traefik.http.routers.tls=true"
      - "traefik.http.routers.tls.certresolver=${CERT_RESOLVER}"

  postgres:
    image: postgres:16-alpine
    expose:
      - 5432
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data


volumes:
  postgres-data:
  letsencrypt-data:
